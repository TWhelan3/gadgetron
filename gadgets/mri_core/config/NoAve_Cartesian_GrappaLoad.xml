<?xml version="1.0" encoding="utf-8"?>
<gadgetronStreamConfiguration xsi:schemaLocation="http://gadgetron.sf.net/gadgetron gadgetron.xsd"
        xmlns="http://gadgetron.sf.net/gadgetron"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!--
        Gadgetron generic recon chain for 2D and 3D cartesian sampling

        Triggered by repetition
        Recon N is contrast and S is set

        Author: Hui Xue
        Magnetic Resonance Technology Program, National Heart, Lung and Blood Institute, National Institutes of Health
        10 Center Drive, Bethesda, MD 20814, USA
        Email: hui.xue@nih.gov
    -->

    <!-- reader -->
    <gadget>      
		<name>LoadIsmrmrdDatasetAcquisitions</name>
		<dll>cfmm_gadgets</dll>
		<classname>LoadIsmrmrdDatasetAcquisitions</classname>
		<property>
			<name>filename</name>
			<value>rawH5/sax6raw.h5</value>
		</property>
	</gadget>

    <!-- Noise prewhitening -->
    <gadget><name>NoiseAdjust</name><dll>gadgetron_mricore</dll><classname>NoiseAdjustGadget</classname></gadget>

    <!-- RO asymmetric echo handling -->
    <gadget><name>AsymmetricEcho</name><dll>gadgetron_mricore</dll><classname>AsymmetricEchoAdjustROGadget</classname></gadget>

    <!-- RO oversampling removal -->
    <gadget><name>RemoveROOversampling</name><dll>gadgetron_mricore</dll><classname>RemoveROOversamplingGadget</classname></gadget>

    <!-- Data accumulation and trigger gadget -->
    <gadget>
        <name>AccTrig</name>
        <dll>gadgetron_mricore</dll>
        <classname>AcquisitionAccumulateTriggerGadget</classname>
        <property><name>trigger_dimension</name><value>repetition</value></property>
        <property><name>sorting_dimension</name><value>slice</value></property>
    </gadget>

    <gadget>
        <name>Buff</name>
        <dll>gadgetron_mricore</dll>
        <classname>BucketToBufferGadget</classname>
        <property><name>N_dimension</name><value>contrast</value></property>
        <property><name>S_dimension</name><value>set</value></property>
        <property><name>split_slices</name><value>true</value></property>
        <property><name>ignore_segment</name><value>true</value></property>
    </gadget>

    <!-- Prep ref -->
    <gadget>
        <name>PrepRef</name>
        <dll>gadgetron_mricore</dll>
        <classname>FlippingCartesianReconReferencePrepGadget</classname>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value>DebugFolder</value></property>
        <property><name>perform_timing</name><value>true</value></property>
        <property><name>verbose</name><value>true</value></property>

        <!-- averaging across repetition -->
        <property><name>average_all_ref_N</name><value>false</value></property>

        <!-- every set has its own kernels -->
        <property><name>average_all_ref_S</name><value>false</value></property>

	<!-- Flip even echos in Readout Direction -->
	<property><name>flip_RO</name><value>2</value></property>

	<!-- Flip all echos in E1 Direction -->
	<property><name>flip_E1</name><value>3</value></property>
    </gadget>

    <!-- Recon -->
    <gadget>
        <name>Recon</name>
        <dll>gadgetron_mricore</dll>
        <classname>MultiChannelCartesianGrappaReconGadget</classname>

        <!-- image series -->
        <property><name>image_series</name><value>0</value></property>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value>DebugFolder</value></property>
        <property><name>perform_timing</name><value>false</value></property>
        <property><name>verbose</name><value>false</value></property>

        <!-- whether to send out gfactor -->
        <property><name>send_out_gfactor</name><value>false</value></property>

	<!-- kernel size -->
	 <property><name>grappa_kSize_RO</name><value>5</value></property>
	 <property><name>grappa_kSize_E1</name><value>4</value></property>

    </gadget>

    <!-- Image Array Scaling -->
    <gadget>
        <name>Scaling</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconImageArrayScalingGadget</classname>

      
        <property><name>perform_timing</name><value>false</value></property>
        <property><name>verbose</name><value>false</value></property>

        <property><name>min_intensity_value</name><value>0</value></property>
        <property><name>max_intensity_value</name><value>4095</value></property>
        <property><name>scalingFactor</name><value>10.0</value></property>
        <property><name>use_constant_scalingFactor</name><value>true</value></property>
        <property><name>auto_scaling_only_once</name><value>true</value></property>
        <property><name>scalingFactor_dedicated</name><value>100.0</value></property>
    </gadget>

    <!-- ImageArray to images -->
    <gadget>
        <name>ImageArraySplit</name>
        <dll>gadgetron_mricore</dll>
        <classname>ImageArraySplitGadget</classname>
    </gadget>

    <!-- after recon processing -->
   <!-- <gadget>
        <name>Extract</name>
        <dll>gadgetron_mricore</dll>
        <classname>ExtractGadget</classname>
	<property><name>extract_mask</name><value>9</value></property>
    </gadget>-->

  <!--  <gadget>
        <name>FloatToShortAttrib</name>
        <dll>gadgetron_mricore</dll>
        <classname>FloatToUShortGadget</classname>

        <property><name>max_intensity</name><value>32767</value></property>
        <property><name>min_intensity</name><value>0</value></property>
        <property><name>intensity_offset</name><value>0</value></property>
    </gadget>-->

   <!-- <gadget>
        <name>ImageFinish</name>
        <dll>gadgetron_mricore</dll>
        <classname>ImageFinishGadget</classname>
    </gadget>-->

    	<gadget>
		<name>SaveIsmrmrdDatasetImages</name>
		<dll>cfmm_gadgets</dll>
		<classname>SaveIsmrmrdDatasetImages</classname>
		<property>
			<name>filename</name>
			<value>testout.ismrmrd</value>
		</property>
	</gadget>

</gadgetronStreamConfiguration>
